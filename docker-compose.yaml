services:

  backend:
    image: ghcr.io/m0wer/rssfilter-backend:master
    container_name: rssfilter-backend
    build:
      context: backend
    environment:
      API_BASE_URL: "https://rssfilter.sgn.space/"
      ROOT_PATH: "/api/"
      REDIS_URL: "redis://redis:6379"
      MAX_WORKERS: ${MAX_WORKERS:-2}
      LOGURU_LEVEL: ${LOGURU_LEVEL:-INFO}
    labels:
      traefik.http.routers.backend.entrypoints: web
      traefik.http.routers.backend.rule: PathPrefix(`/api`)
      traefik.http.routers.backend.service: backend
      traefik.http.services.backend.loadbalancer.server.port: 80
    volumes:
      - ${SQLITE_PATH:-./data/}:/app/data/
      - ${HUGGINGFACE_CACHE:-./huggingface/}:/root/.cache/huggingface/
    depends_on:
      - redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          # recommended to set 1 CPU and 2G of memory per worker
          cpus: "${BACKEND_CPUS:-4}"
          memory: "${BACKEND_MEMORY:-8}G"
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  frontend:
    image: ghcr.io/m0wer/rssfilter-frontend:master
    container_name: rssfilter-frontend
    build:
      context: frontend
    labels:
      traefik.http.routers.frontend.entrypoints: web
      traefik.http.routers.frontend.rule: PathPrefix(`/`)
      traefik.http.routers.frontend.service: frontend
      traefik.http.services.frontend.loadbalancer.server.port: 80
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: ${FRONTEND_CPUS:-2}
          memory: ${FRONTEND_MEMORY:-50M}

  proxy:
    image: traefik:v2.3
    hostname: traefik
    command:
     - --providers.docker
     - --entryPoints.web.address=:80
    ports:
      - ${PROXY_PORT:-80}:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: ${PROXY_CPUS:-2}
          memory: ${PROXY_MEMORY:-100M}

  redis:
    image: redis:7-alpine
    container_name: rssfilter-redis
    volumes:
      - ${REDIS_PATH:-./redis/}:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: ${REDIS_CPUS:-2}
          memory: ${REDIS_MEMORY:-100M}
