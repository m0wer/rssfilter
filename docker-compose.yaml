services:

  backend:
    image: ghcr.io/m0wer/rssfilter-backend:master
    container_name: rssfilter-backend
    build:
      context: backend
    environment:
      API_BASE_URL: "https://rssfilter.sgn.space/"
      ROOT_PATH: "/api/"
      REDIS_URL: "redis://redis:6379/0"
      DATABASE_URL: "sqlite:///data/db.sqlite"
      MAX_WORKERS: ${MAX_WORKERS:-2}
      LOGURU_LEVEL: ${LOGURU_LEVEL:-INFO}
      CUDA_VISIBLE_DEVICES: ${CUDA_VISIBLE_DEVICES:-all}
    labels:
      traefik.http.routers.backend.entrypoints: web
      traefik.http.routers.backend.rule: PathPrefix(`/api`)
      traefik.http.routers.backend.service: backend
      traefik.http.services.backend.loadbalancer.server.port: 80
    volumes:
      - ${SQLITE_PATH:-./data/}:/app/data/
      - ${HUGGINGFACE_CACHE:-./huggingface/}:/root/.cache/huggingface/
    depends_on:
      - redis
      - rq-worker
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "${BACKEND_CPUS:-4}"
          memory: "${BACKEND_MEMORY:-8G}"
        reservations: {devices: [{driver: nvidia, count: all, capabilities: [gpu]}]}

  rq-worker:
    image: ghcr.io/m0wer/rssfilter-backend:master
    container_name: rssfilter-rq-worker
    command: ["/app/worker.py", "high", "medium", "low"]
    environment:
      REDIS_URL: "redis://redis:6379/0"
      DATABASE_URL: "sqlite:///data/db.sqlite"
      LOGURU_LEVEL: ${LOGURU_LEVEL:-INFO}
      CUDA_VISIBLE_DEVICES: ${CUDA_VISIBLE_DEVICES:-all}
    volumes:
      - ${SQLITE_PATH:-./data/}:/app/data/
      - ${HUGGINGFACE_CACHE:-./huggingface/}:/root/.cache/huggingface/
    depends_on:
      - redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "${RQ_WORKER_CPUS:-2}"
          memory: "${RQ_WORKER_MEMORY:-4G}"
        reservations: {devices: [{driver: nvidia, count: all, capabilities: [gpu]}]}

  rq-worker-high:
    image: ghcr.io/m0wer/rssfilter-backend:master
    container_name: rssfilter-rq-worker-high
    command: ["/app/worker.py", "high"]
    environment:
      REDIS_URL: "redis://redis:6379/0"
      DATABASE_URL: "sqlite:///data/db.sqlite"
      LOGURU_LEVEL: ${LOGURU_LEVEL:-INFO}
      CUDA_VISIBLE_DEVICES: ${CUDA_VISIBLE_DEVICES:-all}
    volumes:
      - ${SQLITE_PATH:-./data/}:/app/data/
      - ${HUGGINGFACE_CACHE:-./huggingface/}:/root/.cache/huggingface/
    depends_on:
      - redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "${RQ_WORKER_CPUS:-2}"
          memory: "${RQ_WORKER_MEMORY:-4G}"

  frontend:
    image: ghcr.io/m0wer/rssfilter-frontend:master
    container_name: rssfilter-frontend
    build:
      context: frontend
    labels:
      traefik.http.routers.frontend.entrypoints: web
      traefik.http.routers.frontend.rule: PathPrefix(`/`)
      traefik.http.routers.frontend.service: frontend
      traefik.http.services.frontend.loadbalancer.server.port: 80
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: ${FRONTEND_CPUS:-2}
          memory: ${FRONTEND_MEMORY:-50M}

  proxy:
    image: traefik:v2.3
    container_name: rssfilter-proxy
    command:
     - --providers.docker
     - --entryPoints.web.address=:80
    ports:
      - ${PROXY_PORT:-80}:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: ${PROXY_CPUS:-2}
          memory: ${PROXY_MEMORY:-100M}

  redis:
    image: redis:7-alpine
    container_name: rssfilter-redis
    volumes:
      - ${REDIS_PATH:-./redis/}:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: ${REDIS_CPUS:-2}
          memory: ${REDIS_MEMORY:-100M}
